<controls:UserControlBase x:Class="NetSonar.Avalonia.Views.Dialogs.AddPingServicesDialogView"
                          xmlns="https://github.com/avaloniaui"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:controls="clr-namespace:NetSonar.Avalonia.Controls"
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:icon="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                          xmlns:models="clr-namespace:NetSonar.Avalonia.Models"
                          xmlns:network="clr-namespace:NetSonar.Avalonia.Network"
                          xmlns:suki="https://github.com/kikipoulet/SukiUI"
                          xmlns:sys="clr-namespace:System;assembly=System.Runtime"
                          xmlns:viewModels="clr-namespace:NetSonar.Avalonia.ViewModels"
                          xmlns:vm="clr-namespace:NetSonar.Avalonia.ViewModels.Dialogs"
                          d:DesignHeight="450"
                          d:DesignWidth="800"
                          x:DataType="vm:AddPingServicesDialogModel"
                          mc:Ignorable="d">
    <controls:UserControlBase.KeyBindings>
        <KeyBinding Command="{Binding RemoveServicesCommand}"
                    CommandParameter="{Binding #ServicesGrid.SelectedItems}"
                    Gesture="Shift + Delete" />
        <KeyBinding Command="{Binding ClearCommand}"
                    Gesture="{OnPlatform macOS='Cmd + Shift + Delete',
                                         Default='Ctrl + Shift + Delete'}" />
    </controls:UserControlBase.KeyBindings>


    <suki:SukiMessageBoxHost Classes="AppPanel">
        <suki:SukiMessageBoxHost.Header>
            <Grid ColumnDefinitions="Auto, *"
                  RowDefinitions="Auto">
                <StackPanel Orientation="Horizontal"
                            Spacing="10">
                    <icon:MaterialIcon Kind="Web" />

                    <TextBlock VerticalAlignment="Center"
                               Classes="h4"
                               Text="Services" />

                    <Button MinWidth="45"
                            Padding="15,5"
                            VerticalAlignment="Center"
                            Classes="Information Rounded"
                            Content="{Binding Services.Count}"
                            IsEnabled="False" />
                </StackPanel>

                <StackPanel Grid.Column="1"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal"
                            Spacing="10">
                    <SplitButton Classes="Flat Small"
                                 Command="{Binding ClearCommand}"
                                 Content="{icon:MaterialIconExt Kind=Add}"
                                 ToolTip.Tip="Add new service(s)">
                        <SplitButton.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuItem Command="{Binding ImportFromJsonCommand}"
                                          Header="Import from JSON"
                                          Icon="{icon:MaterialIconExt Kind=CodeJson}" />
                                <MenuItem Command="{Binding ImportNetworkGatewaysCommand}"
                                          Header="Import network gateway(s)"
                                          Icon="{icon:MaterialIconExt Kind=ServerNetworkOutline}" />
                                <MenuItem Command="{Binding ImportPublicDnsCommand}"
                                          Header="Import public DNS"
                                          Icon="{icon:MaterialIconExt Kind=LibraryOutline}" />
                            </MenuFlyout>
                        </SplitButton.Flyout>
                    </SplitButton>

                    <SplitButton Classes="Flat Small"
                                 Command="{Binding RemoveServicesCommand}"
                                 CommandParameter="{Binding #ServicesGrid.SelectedItems}"
                                 Content="{icon:MaterialIconExt Kind=TrashCanOutline}"
                                 ToolTip.Tip="Remove service(s)">
                        <SplitButton.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuItem Command="{Binding ClearCommand}"
                                          Header="Remove all"
                                          Icon="{icon:MaterialIconExt Kind=TrashCan}" />
                            </MenuFlyout>
                        </SplitButton.Flyout>
                    </SplitButton>
                </StackPanel>
            </Grid>
        </suki:SukiMessageBoxHost.Header>

        <Grid ColumnDefinitions="*"
              RowDefinitions="Auto,*">

            <suki:InfoBar Title="Please fix the following errors:"
                          Grid.Row="0"
                          Grid.Column="0"
                          IsVisible="{Binding HasErrors}"
                          Message="{Binding ValidationErrors}"
                          Severity="Error" />

            <DataGrid Name="ServicesGrid"
                      Grid.Row="1"
                      MinHeight="200"
                      CanUserReorderColumns="True"
                      CanUserResizeColumns="True"
                      CanUserSortColumns="True"
                      ClipboardCopyMode="IncludeHeader"
                      HeadersVisibility="All"
                      IsReadOnly="False"
                      ItemsSource="{Binding Services}">
                <DataGrid.Styles>
                    <Style Selector="DataGridRow">
                        <Setter Property="Header" Value="{Binding $self.Index}" />
                    </Style>
                </DataGrid.Styles>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding RemoveServicesCommand}"
                                  CommandParameter="{Binding $parent[DataGrid].SelectedItems}"
                                  Header="Remove selected service(s)"
                                  HotKey="Shift + Delete"
                                  Icon="{icon:MaterialIconExt Kind=Delete}"
                                  IsEnabled="{Binding $parent[DataGrid].SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridCheckBoxColumn Binding="{Binding IsEnabled}"
                                            CellStyleClasses="center"
                                            Header="Enable" />
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding ProtocolType, DataType=models:NewPingService}"
                                            Header="Type"
                                            SortMemberPath="ProtocolType">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ComboBox HorizontalAlignment="Stretch"
                                          ItemsSource="{Binding ProtocolType, Converter={StaticResource RawEnumToCollectionConverter}, Mode=OneTime}"
                                          SelectedItem="{Binding ProtocolType, Converter={StaticResource FromStringToEnumConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Width="200"
                                        Binding="{Binding IpAddressOrUrl}"
                                        Header="IP Address / Url" />
                    <DataGridTextColumn Width="150"
                                        Binding="{Binding Description}"
                                        Header="Description" />
                    <DataGridTextColumn Width="150"
                                        Binding="{Binding Group}"
                                        Header="Group" />
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding PingEverySeconds, DataType=network:PingableService}"
                                            Header="Ping every (s)"
                                            SortMemberPath="PingEveryMilliseconds">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <NumericUpDown Width="130"
                                               suki:NumericUpDownExtensions.Unit="s"
                                               FormatString="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownTimeFormat}}"
                                               Increment="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownPingIncrement}}"
                                               Maximum="{Binding Source={x:Static network:PingableService.MaxPingEverySeconds}}"
                                               Minimum="{Binding Source={x:Static network:PingableService.MinPingEverySeconds}}"
                                               Value="{Binding PingEverySeconds}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding TimeoutSeconds, DataType=network:PingableService}"
                                            Header="Timeout (s)"
                                            SortMemberPath="Timeout">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <NumericUpDown Width="130"
                                               suki:NumericUpDownExtensions.Unit="s"
                                               FormatString="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownTimeFormat}}"
                                               Increment="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownTimeoutIncrement}}"
                                               Maximum="{Binding Source={x:Static network:PingableService.MaxTimeoutSeconds}}"
                                               Minimum="{Binding Source={x:Static network:PingableService.MinTimeoutSeconds}}"
                                               Value="{Binding TimeoutSeconds}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding BufferSize, DataType=network:PingableService}"
                                            Header="Buffer size"
                                            SortMemberPath="BufferSize">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <NumericUpDown Width="90"
                                               FormatString="N0"
                                               Maximum="{Binding Source={x:Static network:PingableService.MaxBufferSize}}"
                                               Minimum="{Binding Source={x:Static network:PingableService.MinBufferSize}}"
                                               Value="{Binding BufferSize}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding Ttl, DataType=network:PingableService}"
                                            Header="TTL"
                                            SortMemberPath="TTL">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <NumericUpDown Width="90"
                                               FormatString="N0"
                                               Maximum="{Binding Source={x:Static sys:Byte.MaxValue}}"
                                               Minimum="{Binding Source={x:Static sys:Byte.MinValue}}"
                                               Value="{Binding Ttl}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn CellStyleClasses="center"
                                            ClipboardContentBinding="{Binding DontFragment, DataType=network:PingableService}"
                                            Header="No Frag."
                                            SortMemberPath="DontFragment">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding DontFragment}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <suki:SukiMessageBoxHost.ActionButtonsSource>
            <Button Classes="Flat"
                    Command="{Binding ApplyCommand}">
                <StackPanel Orientation="Horizontal"
                            Spacing="5">
                    <icon:MaterialIcon Kind="Import" />
                    <TextBlock Text="Import" />
                </StackPanel>
            </Button>
            <Button Classes="Flat"
                    Command="{Binding CloseDialogCommand}">
                <StackPanel Orientation="Horizontal"
                            Spacing="5">
                    <icon:MaterialIcon Kind="Cancel" />
                    <TextBlock Text="Cancel" />
                </StackPanel>
            </Button>
        </suki:SukiMessageBoxHost.ActionButtonsSource>
    </suki:SukiMessageBoxHost>

    <!--
    <Grid ColumnDefinitions="*"
          RowDefinitions="*,Auto,Auto"
          RowSpacing="10">
        <suki:GroupBox>
            <suki:GroupBox.Header>
                <Grid ColumnDefinitions="Auto, *"
                      RowDefinitions="Auto">
                    <StackPanel Orientation="Horizontal"
                                Spacing="10">
                        <icon:MaterialIcon Kind="Web" />

                        <TextBlock VerticalAlignment="Center"
                                   Classes="h4"
                                   Text="Services" />

                        <Button MinWidth="45"
                                Padding="15,5"
                                VerticalAlignment="Center"
                                Classes="Information Rounded"
                                Content="{Binding Services.Count}"
                                IsEnabled="False" />
                    </StackPanel>

                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal"
                                Spacing="10">
                        <SplitButton Classes="Flat Small"
                                     Command="{Binding ClearCommand}"
                                     Content="{icon:MaterialIconExt Kind=Add}"
                                     ToolTip.Tip="Add new service(s)">
                            <SplitButton.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    <MenuItem Command="{Binding ImportFromJsonCommand}"
                                              Header="Import from JSON"
                                              Icon="{icon:MaterialIconExt Kind=CodeJson}" />
                                    <MenuItem Command="{Binding ImportNetworkGatewaysCommand}"
                                              Header="Import network gateway(s)"
                                              Icon="{icon:MaterialIconExt Kind=ServerNetworkOutline}" />
                                    <MenuItem Command="{Binding ImportPublicDnsCommand}"
                                              Header="Import public DNS"
                                              Icon="{icon:MaterialIconExt Kind=LibraryOutline}" />
                                </MenuFlyout>
                            </SplitButton.Flyout>
                        </SplitButton>

                        <SplitButton Classes="Flat Small"
                                     Command="{Binding RemoveServicesCommand}"
                                     CommandParameter="{Binding #ServicesGrid.SelectedItems}"
                                     Content="{icon:MaterialIconExt Kind=TrashCanOutline}"
                                     ToolTip.Tip="Remove service(s)">
                            <SplitButton.Flyout>
                                <MenuFlyout Placement="Bottom">
                                    <MenuItem Command="{Binding ClearCommand}"
                                              Header="Remove all"
                                              Icon="{icon:MaterialIconExt Kind=TrashCan}" />
                                </MenuFlyout>
                            </SplitButton.Flyout>
                        </SplitButton>
                    </StackPanel>
                </Grid>
            </suki:GroupBox.Header>

            <Grid ColumnDefinitions="*"
                  RowDefinitions="Auto,*">

                <suki:InfoBar Grid.Row="0"
                              Grid.Column="0"
                              VerticalContentAlignment="Center"
                              IsClosable="False"
                              IsVisible="{Binding HasErrors}"
                              Message="{Binding ValidationErrors}"
                              Severity="Error" />

                <DataGrid Name="ServicesGrid"
                          Grid.Row="1"
                          MinHeight="200"
                          CanUserReorderColumns="True"
                          CanUserResizeColumns="True"
                          CanUserSortColumns="True"
                          ClipboardCopyMode="IncludeHeader"
                          HeadersVisibility="All"
                          IsReadOnly="False"
                          ItemsSource="{Binding Services}">
                    <DataGrid.Styles>
                        <Style Selector="DataGridRow">
                            <Setter Property="Header" Value="{Binding $self.Index}" />
                        </Style>
                    </DataGrid.Styles>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding RemoveServicesCommand}"
                                      CommandParameter="{Binding $parent[DataGrid].SelectedItems}"
                                      Header="Remove selected service(s)"
                                      HotKey="Shift + Delete"
                                      Icon="{icon:MaterialIconExt Kind=Delete}"
                                      IsEnabled="{Binding $parent[DataGrid].SelectedItem, Converter={x:Static ObjectConverters.IsNotNull}}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsEnabled}"
                                                CellStyleClasses="center"
                                                Header="Enable" />
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding ProtocolType, DataType=models:NewPingService}"
                                                Header="Type"
                                                SortMemberPath="ProtocolType">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ComboBox HorizontalAlignment="Stretch"
                                              ItemsSource="{Binding ProtocolType, Converter={StaticResource RawEnumToCollectionConverter}, Mode=OneTime}"
                                              SelectedItem="{Binding ProtocolType, Converter={StaticResource FromStringToEnumConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Width="200"
                                            Binding="{Binding IpAddressOrUrl}"
                                            Header="IP Address / Url" />
                        <DataGridTextColumn Width="150"
                                            Binding="{Binding Description}"
                                            Header="Description" />
                        <DataGridTextColumn Width="150"
                                            Binding="{Binding Group}"
                                            Header="Group" />
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding PingEverySeconds, DataType=network:PingableService}"
                                                Header="Ping every (s)"
                                                SortMemberPath="PingEveryMilliseconds">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <NumericUpDown Width="130"
                                                   suki:NumericUpDownExtensions.Unit="s"
                                                   FormatString="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownTimeFormat}}"
                                                   Increment="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownPingIncrement}}"
                                                   Maximum="{Binding Source={x:Static network:PingableService.MaxPingEverySeconds}}"
                                                   Minimum="{Binding Source={x:Static network:PingableService.MinPingEverySeconds}}"
                                                   Value="{Binding PingEverySeconds}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding TimeoutSeconds, DataType=network:PingableService}"
                                                Header="Timeout (s)"
                                                SortMemberPath="Timeout">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <NumericUpDown Width="130"
                                                   suki:NumericUpDownExtensions.Unit="s"
                                                   FormatString="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownTimeFormat}}"
                                                   Increment="{Binding Source={x:Static viewModels:PingableServicesPageModel.NumericUpDownTimeoutIncrement}}"
                                                   Maximum="{Binding Source={x:Static network:PingableService.MaxTimeoutSeconds}}"
                                                   Minimum="{Binding Source={x:Static network:PingableService.MinTimeoutSeconds}}"
                                                   Value="{Binding TimeoutSeconds}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding BufferSize, DataType=network:PingableService}"
                                                Header="Buffer size"
                                                SortMemberPath="BufferSize">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <NumericUpDown Width="90"
                                                   FormatString="N0"
                                                   Maximum="{Binding Source={x:Static network:PingableService.MaxBufferSize}}"
                                                   Minimum="{Binding Source={x:Static network:PingableService.MinBufferSize}}"
                                                   Value="{Binding BufferSize}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding Ttl, DataType=network:PingableService}"
                                                Header="TTL"
                                                SortMemberPath="TTL">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <NumericUpDown Width="90"
                                                   FormatString="N0"
                                                   Maximum="{Binding Source={x:Static sys:Byte.MaxValue}}"
                                                   Minimum="{Binding Source={x:Static sys:Byte.MinValue}}"
                                                   Value="{Binding Ttl}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CellStyleClasses="center"
                                                ClipboardContentBinding="{Binding DontFragment, DataType=network:PingableService}"
                                                Header="No Frag."
                                                SortMemberPath="DontFragment">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding DontFragment}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

        </suki:GroupBox>

        <Separator Grid.Row="1" />

        <StackPanel Grid.Row="2"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal"
                    Spacing="10">
            <Button Classes="Flat"
                    Command="{Binding ApplyCommand}">
                <StackPanel Orientation="Horizontal"
                            Spacing="5">
                    <icon:MaterialIcon Kind="Import" />
                    <TextBlock Text="Import" />
                </StackPanel>
            </Button>
            <Button Classes="Flat"
                    Command="{Binding CloseDialogCommand}">
                <StackPanel Orientation="Horizontal"
                            Spacing="5">
                    <icon:MaterialIcon Kind="Cancel" />
                    <TextBlock Text="Cancel" />
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>-->

</controls:UserControlBase>
